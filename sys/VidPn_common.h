#pragma once
#ifndef _VIDPN_COMMON_H

#include <ntddk.h>
#include <wdm.h>
#define NTSTRSAFE_LIB
#include <ntstrsafe.h>
#include <ntddvdeo.h>

#define INITGUID
#include <initguid.h>

#include <Dispmprt.h.>

// {2A6DCA4C-D9A1-469F-AC0D-435C3D7DC9E7}
DEFINE_GUID(GUID_DEVINTERFACE_VIDPN_SEAN,
	0x2a6dca4c, 0xd9a1, 0x469f, 0xac, 0xd, 0x43, 0x5c, 0x3d, 0x7d, 0xc9, 0xe7);

#define VIDPN_SEAN_DVC_NAME L"\\Device\\VIDPN_SEAN"
#define VIDPN_SEAN_DOS_NAME L"\\DosDevices\\VIDPN_SEAN"

#define DXGKRNL_REG_PATH L"\\REGISTRY\\MACHINE\\SYSTEM\\CURRENTCONTROLSET\\SERVICES\\DXGKrnl"
#define DXGKRNL_DEV_NAME L"\\Device\\Dxgkrnl\\0"


#define VIDPN_SEAN_FILTER_DVC_TYPE FILE_DEVICE_VIDEO
#define VIDPN_SEAN_CTRL_DVC_TYPE FILE_DEVICE_UNKNOWN
#define VIDPN_SEAN_FUNC_CODE 0x800

#define IOCTRL_VIDPN_SEAN_ECHOTEST \
    CTL_CODE( VIDPN_SEAN_CTRL_DVC_TYPE, VIDPN_SEAN_FUNC_CODE+1, METHOD_BUFFERED , FILE_ANY_ACCESS  )

#define IOCTRL_VIDPN_SEAN_SYMBNAME \
	CTL_CODE( VIDPN_SEAN_CTRL_DVC_TYPE, VIDPN_SEAN_FUNC_CODE+2, METHOD_BUFFERED , FILE_ANY_ACCESS  )

#define IOCTRL_VIDPN_SEAN_DEVICEPATH \
	CTL_CODE( VIDPN_SEAN_CTRL_DVC_TYPE, VIDPN_SEAN_FUNC_CODE+3, METHOD_BUFFERED , FILE_ANY_ACCESS  )

#define IOCTRL_VIDPN_SEAN_ATTATCHEDDVC \
	CTL_CODE( VIDPN_SEAN_CTRL_DVC_TYPE, VIDPN_SEAN_FUNC_CODE+4, METHOD_BUFFERED , FILE_ANY_ACCESS  )

#define IOCTRL_VIDPN_DXGKRNL_DPIINIT \
	CTL_CODE( FILE_DEVICE_VIDEO, 0xF, METHOD_NEITHER, FILE_ANY_ACCESS  )

typedef
__checkReturn
NTSTATUS
DXGKRNL_DPIINITIALIZE(
	PDRIVER_OBJECT DriverObject,
	PUNICODE_STRING RegistryPath,
	DRIVER_INITIALIZATION_DATA* pWddm_Driver_Init_Data
);
typedef DXGKRNL_DPIINITIALIZE* PDXGKRNL_DPIINITIALIZE;

typedef struct _VIDPN_SEAN_DVC_EXT
{
	PDEVICE_OBJECT pDvcObjNext;
	PDRIVER_OBJECT pDisplayAdapterDrvObj;
	PDEVICE_OBJECT pDxgkrnlDevObj;
	PFILE_OBJECT pDxgkrnlFileObj;
	PDXGKRNL_DPIINITIALIZE pDxgKrnl_DpiInit;
	PDEVICE_OBJECT pDvcObjSelf;
	IO_REMOVE_LOCK RemoveLock;
	PDRIVER_INITIALIZATION_DATA pOrigenal_Init_Data;
	PDRIVER_INITIALIZATION_DATA pMyWddm_Init_Data;
	UNICODE_STRING SymbName;
	UNICODE_STRING DvcPath;
	LPCTSTR pTargetRegPath;
	PETHREAD pThreadObj;
	KEVENT Thread_Event;
	KEVENT NextDrv_Event;
	BOOLEAN StopThread;
	BOOLEAN IsAttachedToDxgkrnl;
	BOOLEAN IsMonitorBlocked;
	LONG PendingIrp;
	LIST_ENTRY IoCtrl_List;
	KSPIN_LOCK Queue_Lock;
	PIO_WORKITEM pWorkItem;
}
VIDPN_SEAN_DVC_EXT, *PVIDPN_SEAN_DVC_EXT;

//PVIDPN_SEAN_DVC_EXT pMyDevExt = NULL;

#define VIDPN_SEAN_POOL_TAG (ULONG) 'PTAG'
#define VIDPN_SEAN_LOCK_TAG (ULONG) 'LTAG'

#define VIDPN_SEAN_DBG_COMPONENT_ID DPFLTR_IHVDRIVER_ID

#define FUNC_ENTER() \
	DbgPrintEx( VIDPN_SEAN_DBG_COMPONENT_ID, DPFLTR_TRACE_LEVEL, __FUNCTION__"() =====>> enter\r\n" );
#define FUNC_EXIT() \
	DbgPrintEx( VIDPN_SEAN_DBG_COMPONENT_ID, DPFLTR_TRACE_LEVEL, __FUNCTION__"() =====>> exit\r\n" );

#define TRACE_MSG_VIDPN(_x_) \
	DbgPrintEx( VIDPN_SEAN_DBG_COMPONENT_ID, DPFLTR_TRACE_LEVEL, "%s,Line %d:", __FILE__, __LINE__ ); \
	DbgPrintEx( VIDPN_SEAN_DBG_COMPONENT_ID, DPFLTR_TRACE_LEVEL, _x_ );
#define INFO_MSG_VIDPN(_x_) \
	DbgPrintEx( VIDPN_SEAN_DBG_COMPONENT_ID, DPFLTR_TRACE_LEVEL, "%s,Line %d:", __FILE__, __LINE__ ); \
	DbgPrintEx( VIDPN_SEAN_DBG_COMPONENT_ID, DPFLTR_INFO_LEVEL, _x_ );

#if !defined( INVALID_HANDLE_VALUE )
#define INVALID_HANDLE_VALUE ((HANDLE)(LONG_PTR)-1)
#endif

#endif // !_VIDPN_COMMON_H
